/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 * Genkit AI Service API
 * AI 模型提供商管理服务 API 文档
提供模型提供商、模型信息和参数规则的查询接口
 * OpenAPI spec version: 1.0.0
 */
import type {
  DeleteTenantsTenantIdUsersUserIdPathParameters,
  GenkitAiServiceInternalModelAnyDataResponse,
  GenkitAiServiceInternalModelUserDataResponse,
  GenkitAiServiceInternalModelUserListResponse,
  GetTenantsTenantIdUsersParams,
  GetTenantsTenantIdUsersPathParameters,
  InternalApiHandlerCreateUserRequestBody,
  InternalApiHandlerUpdateUserStatusRequest,
  PatchTenantsTenantIdUsersUserIdStatusPathParameters,
  PostTenantsTenantIdUsersPathParameters,
} from '../../../types/api'

import { orvalMutator } from '../../../utils/orval-mutator'

export const getTenantUserManagement = () => {
  /**
   * 获取指定租户下的用户列表，支持分页（需要租户管理员或平台管理员权限）
   * @summary 获取租户用户列表
   */
  const getTenantsTenantIdUsers = (
    { tenantId }: GetTenantsTenantIdUsersPathParameters,
    params: GetTenantsTenantIdUsersParams,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelUserListResponse>({
      url: `/tenants/${tenantId}/users`,
      method: 'GET',
      params,
    })
  }
  /**
   * 在指定租户下创建新用户（需要租户管理员或平台管理员权限）
   * @summary 在租户下创建用户
   */
  const postTenantsTenantIdUsers = (
    { tenantId }: PostTenantsTenantIdUsersPathParameters,
    internalApiHandlerCreateUserRequestBody: InternalApiHandlerCreateUserRequestBody,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelUserDataResponse>({
      url: `/tenants/${tenantId}/users`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerCreateUserRequestBody,
    })
  }
  /**
   * 软删除指定租户下的用户（需要租户管理员或平台管理员权限）
   * @summary 删除用户
   */
  const deleteTenantsTenantIdUsersUserId = ({
    tenantId,
    userId,
  }: DeleteTenantsTenantIdUsersUserIdPathParameters) => {
    return orvalMutator<GenkitAiServiceInternalModelAnyDataResponse>({
      url: `/tenants/${tenantId}/users/${userId}`,
      method: 'DELETE',
    })
  }
  /**
   * 启用或禁用指定租户下的用户（需要租户管理员或平台管理员权限）
   * @summary 更新用户状态
   */
  const patchTenantsTenantIdUsersUserIdStatus = (
    { tenantId, userId }: PatchTenantsTenantIdUsersUserIdStatusPathParameters,
    internalApiHandlerUpdateUserStatusRequest: InternalApiHandlerUpdateUserStatusRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelUserDataResponse>({
      url: `/tenants/${tenantId}/users/${userId}/status`,
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerUpdateUserStatusRequest,
    })
  }
  return {
    getTenantsTenantIdUsers,
    postTenantsTenantIdUsers,
    deleteTenantsTenantIdUsersUserId,
    patchTenantsTenantIdUsersUserIdStatus,
  }
}
export type GetTenantsTenantIdUsersResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTenantUserManagement>['getTenantsTenantIdUsers']
    >
  >
>
export type PostTenantsTenantIdUsersResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getTenantUserManagement>['postTenantsTenantIdUsers']
    >
  >
>
export type DeleteTenantsTenantIdUsersUserIdResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<
        typeof getTenantUserManagement
      >['deleteTenantsTenantIdUsersUserId']
    >
  >
>
export type PatchTenantsTenantIdUsersUserIdStatusResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<
        typeof getTenantUserManagement
      >['patchTenantsTenantIdUsersUserIdStatus']
    >
  >
>
