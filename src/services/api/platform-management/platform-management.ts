/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 * Genkit AI Service API
 * AI 模型提供商管理服务 API 文档
提供模型提供商、模型信息和参数规则的查询接口
 * OpenAPI spec version: 1.0.0
 */
import type {
  DeleteApiV1PlatformTenantsIdPathParameters,
  GenkitAiServiceInternalModelAnyDataResponse,
  GenkitAiServiceInternalModelTenantDataResponse,
  GenkitAiServiceInternalModelTenantListResponse,
  GetApiV1PlatformTenantsParams,
  InternalApiHandlerCreateTenantWithAdminDataResponse,
  InternalApiHandlerCreateTenantWithAdminRequest,
  InternalApiHandlerUpdateTenantStatusRequest,
  PatchApiV1PlatformTenantsIdStatusPathParameters,
} from '../../../types/api'

import { orvalMutator } from '../../../utils/orval-mutator'

export const getPlatformManagement = () => {
  /**
 * 获取所有租户列表，支持分页和类型过滤。需要平台管理员权限（system_admin角色）。

**权限要求：** system_admin

**功能说明：**
- 支持分页查询（默认每页10条，最多100条）
- 支持按租户类型过滤（system: 平台租户, tenant: 业务租户）
- 返回租户的完整信息，包括名称、域名、类型、状态等

**租户类型：**
- system: 平台租户（系统级租户，用于承载平台管理员）
- tenant: 业务租户（普通租户，用于实际业务使用）
 * @summary 获取租户列表
 */
  const getApiV1PlatformTenants = (params?: GetApiV1PlatformTenantsParams) => {
    return orvalMutator<GenkitAiServiceInternalModelTenantListResponse>({
      url: `/api/v1/platform/tenants`,
      method: 'GET',
      params,
    })
  }
  /**
 * 创建新的业务租户并自动生成租户管理员账户。系统会自动为租户创建一个管理员账户，并生成随机强密码。需要平台管理员权限（system_admin角色）。

**权限要求：** system_admin

**功能说明：**
- 创建类型为 "tenant" 的业务租户
- 自动生成租户管理员账户（角色为 tenant_admin）
- 生成16位随机强密码（包含大小写字母、数字和特殊字符）
- 返回租户信息和管理员初始密码

**注意事项：**
- 管理员邮箱如未指定，默认为 admin@{tenantDomain}
- 请妥善保管返回的初始密码，建议首次登录后立即修改
- 租户域名必须唯一
 * @summary 创建租户（带管理员）
 */
  const postApiV1PlatformTenants = (
    internalApiHandlerCreateTenantWithAdminRequest: InternalApiHandlerCreateTenantWithAdminRequest,
  ) => {
    return orvalMutator<InternalApiHandlerCreateTenantWithAdminDataResponse>({
      url: `/api/v1/platform/tenants`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerCreateTenantWithAdminRequest,
    })
  }
  /**
 * 软删除指定的业务租户。需要平台管理员权限（system_admin角色）。

**权限要求：** system_admin

**功能说明：**
- 执行软删除操作，设置 is_deleted = true
- 不会物理删除数据库记录，保留数据用于审计和恢复
- 删除后的租户不会出现在租户列表中

**限制条件：**
- 不允许删除平台租户（type = "system"）
- 删除租户时会级联处理相关数据（根据数据库外键约束）

**注意事项：**
- 删除操作不可逆（除非通过数据库直接恢复）
- 建议在删除前先禁用租户，观察一段时间后再删除
- 删除租户会影响该租户下的所有用户和数据
 * @summary 删除租户
 */
  const deleteApiV1PlatformTenantsId = ({
    id,
  }: DeleteApiV1PlatformTenantsIdPathParameters) => {
    return orvalMutator<GenkitAiServiceInternalModelAnyDataResponse>({
      url: `/api/v1/platform/tenants/${id}`,
      method: 'DELETE',
    })
  }
  /**
 * 更新租户的启用/禁用状态。需要平台管理员权限（system_admin角色）。

**权限要求：** system_admin

**功能说明：**
- 启用租户：设置 status = true，该租户下的用户可以正常登录和访问系统
- 禁用租户：设置 status = false，该租户下的所有用户将无法登录和访问系统

**影响范围：**
- 禁用租户后，该租户下所有用户的登录请求将被拒绝
- 禁用租户后，该租户下所有用户的 API 访问请求将被拒绝
- 启用租户后，该租户下用户恢复正常访问

**注意事项：**
- 不允许禁用平台租户（type = "system"）
- 禁用操作会立即生效
 * @summary 启用/禁用租户
 */
  const patchApiV1PlatformTenantsIdStatus = (
    { id }: PatchApiV1PlatformTenantsIdStatusPathParameters,
    internalApiHandlerUpdateTenantStatusRequest: InternalApiHandlerUpdateTenantStatusRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelTenantDataResponse>({
      url: `/api/v1/platform/tenants/${id}/status`,
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerUpdateTenantStatusRequest,
    })
  }
  return {
    getApiV1PlatformTenants,
    postApiV1PlatformTenants,
    deleteApiV1PlatformTenantsId,
    patchApiV1PlatformTenantsIdStatus,
  }
}
export type GetApiV1PlatformTenantsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getPlatformManagement>['getApiV1PlatformTenants']
    >
  >
>
export type PostApiV1PlatformTenantsResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getPlatformManagement>['postApiV1PlatformTenants']
    >
  >
>
export type DeleteApiV1PlatformTenantsIdResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getPlatformManagement>['deleteApiV1PlatformTenantsId']
    >
  >
>
export type PatchApiV1PlatformTenantsIdStatusResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<
        typeof getPlatformManagement
      >['patchApiV1PlatformTenantsIdStatus']
    >
  >
>
