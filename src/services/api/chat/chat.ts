/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 * Genkit AI Service API
 * AI 模型提供商管理服务 API 文档
提供模型提供商、模型信息和参数规则的查询接口
 * OpenAPI spec version: 1.0.0
 */
import type {
  AbortRequest,
  ChatRequestBody,
  ChatResponseData,
  SuccessResponse,
} from '../../../types/api'

import { orvalMutator } from '../../../utils/orval-mutator'

export const getChat = () => {
  /**
   * 向 AI 发送消息并获取回复，支持通过 messageId 继续对话
   * @summary 发送对话消息
   */
  const postChat = (chatRequestBody: ChatRequestBody) => {
    return orvalMutator<ChatResponseData>({
      url: `/chat`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: chatRequestBody,
    })
  }
  /**
   * 中止指定消息的对话处理
   * @summary 中止对话
   */
  const postChatAbort = (abortRequest: AbortRequest) => {
    return orvalMutator<SuccessResponse>({
      url: `/chat/abort`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: abortRequest,
    })
  }
  /**
   * 向 AI 发送消息并以流式方式获取回复，支持通过 messageId 继续对话
   * @summary 发送流式对话消息
   */
  const postChatStream = (chatRequestBody: ChatRequestBody) => {
    return orvalMutator<string>({
      url: `/chat/stream`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: chatRequestBody,
    })
  }
  return { postChat, postChatAbort, postChatStream }
}
export type PostChatResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getChat>['postChat']>>
>
export type PostChatAbortResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getChat>['postChatAbort']>>
>
export type PostChatStreamResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getChat>['postChatStream']>>
>
