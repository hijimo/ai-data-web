/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 * Genkit AI Service API
 * AI 模型提供商管理服务 API 文档
提供模型提供商、模型信息和参数规则的查询接口
 * OpenAPI spec version: 1.0.0
 */
import type {
  GenkitAiServiceInternalModelLoginDataResponse,
  GenkitAiServiceInternalModelSuccessResponse,
  GenkitAiServiceInternalModelUserDataResponse,
  InternalApiHandlerChangePasswordRequest,
  InternalApiHandlerLoginRequest,
  InternalApiHandlerLogoutRequest,
  InternalApiHandlerRefreshRequest,
  InternalApiHandlerRegisterRequest,
  InternalApiHandlerResendVerificationRequest,
  InternalApiHandlerUnlockAccountRequest,
  InternalApiHandlerVerifyEmailRequest,
} from '../../../types/api'

import { orvalMutator } from '../../../utils/orval-mutator'

export const getAuthentication = () => {
  /**
   * 修改当前用户的密码
   * @summary 修改密码
   */
  const postAuthChangePassword = (
    internalApiHandlerChangePasswordRequest: InternalApiHandlerChangePasswordRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelSuccessResponse>({
      url: `/auth/change-password`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerChangePasswordRequest,
    })
  }
  /**
   * 使用邮箱和密码登录系统
   * @summary 用户登录
   */
  const postAuthLogin = (
    internalApiHandlerLoginRequest: InternalApiHandlerLoginRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelLoginDataResponse>({
      url: `/auth/login`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerLoginRequest,
    })
  }
  /**
   * 注销用户并撤销 Refresh Token
   * @summary 用户注销
   */
  const postAuthLogout = (
    internalApiHandlerLogoutRequest: InternalApiHandlerLogoutRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelSuccessResponse>({
      url: `/auth/logout`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerLogoutRequest,
    })
  }
  /**
   * 获取当前登录用户的详细信息
   * @summary 获取当前用户信息
   */
  const getAuthMe = () => {
    return orvalMutator<GenkitAiServiceInternalModelUserDataResponse>({
      url: `/auth/me`,
      method: 'GET',
    })
  }
  /**
   * 使用 Refresh Token 获取新的 Access Token
   * @summary 刷新访问令牌
   */
  const postAuthRefresh = (
    internalApiHandlerRefreshRequest: InternalApiHandlerRefreshRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelLoginDataResponse>({
      url: `/auth/refresh`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerRefreshRequest,
    })
  }
  /**
   * 注册新用户账户
   * @summary 用户注册
   */
  const postAuthRegister = (
    internalApiHandlerRegisterRequest: InternalApiHandlerRegisterRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelUserDataResponse>({
      url: `/auth/register`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerRegisterRequest,
    })
  }
  /**
   * 重新发送邮箱验证邮件
   * @summary 重新发送验证邮件
   */
  const postAuthResendVerification = (
    internalApiHandlerResendVerificationRequest: InternalApiHandlerResendVerificationRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelSuccessResponse>({
      url: `/auth/resend-verification`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerResendVerificationRequest,
    })
  }
  /**
   * 解锁被锁定的用户账户（需要管理员权限）
   * @summary 解锁账户
   */
  const postAuthUnlockAccount = (
    internalApiHandlerUnlockAccountRequest: InternalApiHandlerUnlockAccountRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelSuccessResponse>({
      url: `/auth/unlock-account`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerUnlockAccountRequest,
    })
  }
  /**
   * 使用验证令牌验证用户邮箱
   * @summary 验证邮箱
   */
  const postAuthVerifyEmail = (
    internalApiHandlerVerifyEmailRequest: InternalApiHandlerVerifyEmailRequest,
  ) => {
    return orvalMutator<GenkitAiServiceInternalModelSuccessResponse>({
      url: `/auth/verify-email`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: internalApiHandlerVerifyEmailRequest,
    })
  }
  return {
    postAuthChangePassword,
    postAuthLogin,
    postAuthLogout,
    getAuthMe,
    postAuthRefresh,
    postAuthRegister,
    postAuthResendVerification,
    postAuthUnlockAccount,
    postAuthVerifyEmail,
  }
}
export type PostAuthChangePasswordResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthentication>['postAuthChangePassword']>
  >
>
export type PostAuthLoginResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuthentication>['postAuthLogin']>>
>
export type PostAuthLogoutResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuthentication>['postAuthLogout']>>
>
export type GetAuthMeResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuthentication>['getAuthMe']>>
>
export type PostAuthRefreshResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuthentication>['postAuthRefresh']>>
>
export type PostAuthRegisterResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuthentication>['postAuthRegister']>>
>
export type PostAuthResendVerificationResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getAuthentication>['postAuthResendVerification']
    >
  >
>
export type PostAuthUnlockAccountResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthentication>['postAuthUnlockAccount']>
  >
>
export type PostAuthVerifyEmailResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthentication>['postAuthVerifyEmail']>
  >
>
